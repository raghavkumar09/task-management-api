openapi: 3.0.0
info:
  title: Task Management API
  version: 1.0.0
  description: A RESTful API for managing tasks and users.
servers:
  - url: http://localhost:5000/api
    description: Development Server
paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  example: johndoe
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  example: Password123
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: The user ID.
                  username:
                    type: string
                    description: The user's username.
                  email:
                    type: string
                    description: The user's email address.
                  roles:
                    type: array
                    description: The user's roles.
                  token:
                    type: string
                    description: Authentication JWT token.
        "400":
          description: Invalid input or user already exists
          
  /auth/login:
    post:
      summary: Login user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  example: Password123
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: The user ID.
                  username:
                    type: string
                    description: The user's username.
                  email:
                    type: string
                    description: The user's email address.
                  roles:
                    type: array
                    description: The user's roles.
                  token:
                    type: string
                    description: Authentication JWT token.
        "401":
          description: Invalid email or password